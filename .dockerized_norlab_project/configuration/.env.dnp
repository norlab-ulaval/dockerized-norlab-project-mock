# =================================================================================================
# Set Dockerized-NorLab-Project environment variable.
#
# Notes:
#   - This dotenv file is use both at buildtime and runtime
#   - DNP dotenv file loading precedence:
#       1. .env.dnp
#       2. .env.dnp-internal (DNP repository)
#       3. .env
#       4. .env.local
#
# =================================================================================================

# ....Repository config............................................................................
# https://github.com/norlab-ulaval/RedLeader-research-codebase.git
DN_PROJECT_GIT_DOMAIN="norlab-ulaval"
DN_PROJECT_GIT_NAME="dockerized-norlab-project-mock"

# ....Docker config................................................................................

# This the Docker hub from where the base image is pulled and where your images will be pushed to.
DN_PROJECT_HUB=norlabulaval

# Dev note: This should be the DN-project default
DN_PROJECT_BASE_IMG=dockerized-norlab-dependencies-full

DN_CONTAINER_NAME="IamDNPuser-mock"
DN_PROJECT_ALIAS_PREFIX="umock"

# ....deploy config................................................................................

# Path to the src code that will be cloned into the DN project-deploy image
DN_PROJECT_DEPLOY_SRC_PATH="${SUPER_PROJECT_ROOT:-$( git rev-parse --show-toplevel )}"

# Branch checkout for the project-deploy image
DN_PROJECT_DEPLOY_REPO_BRANCH=dev
# Option: 'main', 'dev', '<feature-branch>' or tag version (ie 'v*.*.*')

# ====Dockerized-NorLab============================================================================

# ....Tag..........................................................................................
# The Dockerized-NorLab base image tag is generated by DNP internaly using various environment variables either set by the user or set by DNP. The gerated base image tag and base image name follow this patern:
#
#   <dn-project-hub>/<dn-project-base-img>:DN-<dn-version>-<tag-package>-<tag-os-version>
#
# Example:
#   norlabulaval/dockerized-norlab-dependencies-full:DN-bleeding-foxy-desktop-l4t-pytorch-r35.4.1
#
# See https://hub.docker.com/repositories/norlabulaval for available base images.

# Dockerized-NorLab image version
# Use one of the following:
# - 'latest' is the latest push to the repository default branch
# - 'bleeding' is the latest push to the repository dev branch (i.e. bleeding-edge)
# - you can use a specific release version tag number, e.g., 'v0.7.0'
DN_VERSION=bleeding

# The Dockerized-NorLab base image tag package name
TAG_PACKAGE=foxy-base-l4t-pytorch

# The Linux-for-Tegra nvidia-docker container tag version
#TAG_OS_VERSION=r35.2.1
#TAG_OS_VERSION=r35.3.1
TAG_OS_VERSION=r35.4.1
#TAG_OS_VERSION=r35.5.0 # Note: dustynv/l4t-pytorch is not available for this JP version yet
#TAG_OS_VERSION=r36.2.0

# ....Main config..................................................................................
DN_HUB=norlabulaval
DN_GIT_BRANCH=dev
# Option: 'main', 'dev', '<feature-branch>' or tag version (ie 'v*.*.*')

# ====Docker CLI/config/internal===================================================================
# Docker context global overide
#DOCKER_CONTEXT=desktop-linux

# Docker builder global overide.
#BUILDX_BUILDER=desktop-linux
# Note: DNP 'execute_compose.bash' automaticaly select the native builder if BUILDX_BUILDER is not set.

# Unmute BUILDKIT_PROGRESS to set globaly for debugging dockerfile
# For debuging docker build localy, use `docker build --progress=plain --no-cache` flags instead
#BUILDKIT_PROGRESS=plain
